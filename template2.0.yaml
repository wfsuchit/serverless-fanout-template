AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  serverless-order-pipeline

  Sample SAM Template for serverless-order-pipeline

Resources:
  ServerlessOrderPipelineAPIGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: 'test'
      DefinitionBody:
        swagger: '2.0'
        info:
          title: 'API Gateway to SNS to SQS to Lambda'
          version: '1.0'
        paths:
          /message:
            post:
              parameters:
                - name: 'requestBody'
                  in: 'body'
                  schema:
                    type: 'object'
                    properties:
                      message:
                        type: 'string'
                - name: 'message'
                  in: 'query'
                  type: 'string'
                - name: 'topic'
                  in: 'query'
                  type: 'string'
                - name: 'subject'
                  in: 'query'
                  type: 'string'
              responses:
                '200':
                  description: 'OK'
              security:
                - none: []
              x-amazon-apigateway-integration:
                httpMethod: 'POST'
                type: 'aws'
                credentials: !GetAtt SAMApiGatewaySNSRole.Arn
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:sns:action/Publish'
                requestParameters:
                  integration.request.querystring.TopicArn: "method.request.querystring.topic"
                  integration.request.querystring.Subject: "method.request.querystring.subject"
                  integration.request.querystring.Message: "method.request.querystring.message"
                # requestTemplates:
                #   application/json: !Sub '{"Message": "$util.escapeJavaScript($input.body)}'
                responses:
                  default:
                    statusCode: '200'
  
  SAMApiGatewaySNSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: SAMApiGatewaySNSRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - SNS:Publish
                Resource: !Ref SnsTopic

  SnsTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: 'serverless-order-pipeline-sns-topic-test'
  
  SqsQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: 'serverless-order-pipeline-sns-topic-sqs-queue-test'
  
  ServerlessOrderPipelineLambdaFunction1:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Events:
        SqsEvent:
          Type: 'SQS'
          Properties:
            Queue: !GetAtt SqsQueue.Arn
            BatchSize: 1
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SnsTopic

Outputs:
  ApiEndpoint:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${ServerlessOrderPipelineAPIGateway}.execute-api.${AWS::Region}.amazonaws.com/test/message'
